# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'strcmp.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


import sys
from PyQt5 import QtCore, QtGui, QtWidgets
from difflib import SequenceMatcher
from paraphrase import paraphrase_two2one,paraphrase_relative,init_gpt
def print_same_substring(raw1, raw2):
    s = SequenceMatcher(None, raw1, raw2)
    # enumerate all same substring
    res=[]
    for id,(tag, i1, i2, j1, j2) in enumerate( s.get_opcodes()):
        if tag == 'equal' and abs(i2-i1)>6:
            # print(id," :\t",raw1[i1:i2])
            res.append(raw1[i1:i2])
    return res
class Ui_Dialog(object):
    def setupUi(self, Dialog):
        Dialog.setObjectName("Dialog")
        Dialog.resize(982, 699)
        self.plainTextEdit_p1 = QtWidgets.QPlainTextEdit(Dialog)
        self.plainTextEdit_p1.setGeometry(QtCore.QRect(10, 60, 211, 561))
        self.plainTextEdit_p1.setObjectName("plainTextEdit_p1")
        self.plainTextEdit_w0 = QtWidgets.QTextEdit(Dialog)
        self.plainTextEdit_w0.setGeometry(QtCore.QRect(380, 60, 211, 561))
        self.plainTextEdit_w0.setObjectName("plainTextEdit_w0")
        self.plainTextEdit_p2 = QtWidgets.QPlainTextEdit(Dialog)
        self.plainTextEdit_p2.setGeometry(QtCore.QRect(760, 60, 211, 561))
        self.plainTextEdit_p2.setObjectName("plainTextEdit_p2")
        self.label_p1 = QtWidgets.QLabel(Dialog)
        self.label_p1.setGeometry(QtCore.QRect(70, 30, 101, 21))
        self.label_p1.setObjectName("label_p1")
        # set label_p1 color to red
        self.label_p1.setStyleSheet("color:red")
        self.label_p2 = QtWidgets.QLabel(Dialog)
        self.label_p2.setGeometry(QtCore.QRect(840, 30, 101, 21))
        self.label_p2.setObjectName("label_p2")
        # set label_p2 color to blue
        self.label_p2.setStyleSheet("color:blue")
        self.label_w0 = QtWidgets.QLabel(Dialog)
        self.label_w0.setGeometry(QtCore.QRect(450, 30, 101, 21))
        self.label_w0.setObjectName("label_w0")
        self.pushButton_compare = QtWidgets.QPushButton(Dialog)
        self.pushButton_compare.setGeometry(QtCore.QRect(100, 660, 200, 31))
        self.pushButton_compare.setObjectName("pushButton_compare")
        self.pushButton_generate = QtWidgets.QPushButton(Dialog)
        self.pushButton_generate.setGeometry(QtCore.QRect(380, 660, 200, 31))
        self.pushButton_generate.setObjectName("pushButton_generate")
        self.pushButton_cl_p1 = QtWidgets.QPushButton(Dialog)
        self.pushButton_cl_p1.setGeometry(QtCore.QRect(70, 630, 75, 23))
        self.pushButton_cl_p1.setObjectName("pushButton_cl_p1")
        self.pushButton_cl_p2 = QtWidgets.QPushButton(Dialog)
        self.pushButton_cl_p2.setGeometry(QtCore.QRect(840, 630, 75, 23))
        self.pushButton_cl_p2.setObjectName("pushButton_cl_p2")
        self.pushButton_cl_w0 = QtWidgets.QPushButton(Dialog)
        self.pushButton_cl_w0.setGeometry(QtCore.QRect(440, 630, 75, 23))
        self.pushButton_cl_w0.setObjectName("pushButton_cl_w0")
        self.pushButton_cl_all = QtWidgets.QPushButton(Dialog)
        self.pushButton_cl_all.setGeometry(QtCore.QRect(660, 660, 200, 31))
        self.pushButton_cl_all.setObjectName("pushButton_cl_all")
        self.listWidget_p1 = QtWidgets.QListWidget(Dialog)
        self.listWidget_p1.setGeometry(QtCore.QRect(230, 60, 141, 561))
        self.listWidget_p1.setObjectName("listWidget_p1")
        self.listWidget_p2 = QtWidgets.QListWidget(Dialog)
        self.listWidget_p2.setGeometry(QtCore.QRect(610, 60, 141, 561))
        self.listWidget_p2.setObjectName("listWidget_p2")

        self.retranslateUi(Dialog)
        QtCore.QMetaObject.connectSlotsByName(Dialog)

    def retranslateUi(self, Dialog):
        _translate = QtCore.QCoreApplication.translate
        Dialog.setWindowTitle(_translate("Dialog", "Dialog"))
        self.label_p1.setText(_translate("Dialog", "原文段落1"))
        self.label_p2.setText(_translate("Dialog", "原文段落2"))
        self.label_w0.setText(_translate("Dialog", "写作段落"))
        # self.pushButton_compare.setText(_translate("Dialog", "比较"))
        self.pushButton_compare.setText(_translate("Dialog", "查重"))
        self.pushButton_generate.setText(_translate("Dialog", "生成文本"))
        self.pushButton_cl_p1.setText(_translate("Dialog", "清空段落1"))
        self.pushButton_cl_p2.setText(_translate("Dialog", "清空段落2"))
        self.pushButton_cl_w0.setText(_translate("Dialog", "清空写作"))
        self.pushButton_cl_all.setText(_translate("Dialog", "全部清空"))
class Example(QtWidgets.QMainWindow):
    def __init__(self):
        self.app = QtWidgets.QApplication(sys.argv)
        super().__init__()
        self.ui = Ui_Dialog()
        self.ui.setupUi(self)
        # 初始化
        self.init_ui()
        init_gpt()
    # ui初始化
    def init_ui(self):
        # 初始化方法，这里可以写按钮绑定等的一些初始函数
        self.ui.pushButton_compare.clicked.connect(self.compare)
        self.ui.pushButton_generate.clicked.connect(self.generate)
        self.ui.pushButton_cl_p1.clicked.connect(self.clean_p1)
        self.ui.pushButton_cl_p2.clicked.connect(self.clean_p2)
        self.ui.pushButton_cl_w0.clicked.connect(self.clean_w0)
        self.ui.pushButton_cl_all.clicked.connect(self.clean_all)

        self.show()
    def compare(self):
        self.ui.listWidget_p1.clear()
        self.ui.listWidget_p2.clear()
        redText = "<span style=\" color:red;\" >"
        bluText = "<span style=\" color:blue;\" >"
        endText = "</span>"
        text_p1 = self.ui.plainTextEdit_p1.toPlainText()
        text_p2 = self.ui.plainTextEdit_p2.toPlainText()
        text_w0 = self.ui.plainTextEdit_w0.toPlainText()
        if not text_p1 and not text_p2 and not text_w0:
            return
        res1=print_same_substring(text_p1, text_w0) if text_p1 else []
        res2=print_same_substring(text_p2, text_w0) if text_p2 else []
        self.ui.listWidget_p1.addItems(res1)
        self.ui.listWidget_p2.addItems(res2)
        # change color of the same substring in plainTextEdit_w0
        for i in res1:
            text_w0=text_w0.replace(i, redText+i+endText)
        for i in res2:
            text_w0=text_w0.replace(i, bluText+i+endText)
        # self.ui.plainTextEdit_w0.setPlainText(text_w0)
        self.ui.plainTextEdit_w0.setText(text_w0)
        # self.ui.plainTextEdit_w0.repaint()
        self.ui.plainTextEdit_w0.update()
        # self.ui.plainTextEdit_w0.setText()
        pass
    def generate(self):
        self.ui.listWidget_p1.clear()
        self.ui.listWidget_p2.clear()
        self.ui.plainTextEdit_w0.clear()
        redText = "<span style=\" color:red;\" >"
        bluText = "<span style=\" color:blue;\" >"
        endText = "</span>"
        text_p1 = self.ui.plainTextEdit_p1.toPlainText()
        text_p2 = self.ui.plainTextEdit_p2.toPlainText()
        # text_w0=
        # text_w0 = self.ui.plainTextEdit_w0.toPlainText()
        if text_p1=="" and text_p2=="":
            self.ui.plainTextEdit_w0.setText("请先输入原文段落")
            return
        if text_p1=="":
            text_w0=paraphrase_relative(text_p2)
        elif text_p2=="":
            text_w0=paraphrase_relative(text_p1)
        else:
            text_w0=paraphrase_two2one(text_p1, text_p2)
        res1=print_same_substring(text_p1, text_w0)
        res2=print_same_substring(text_p2, text_w0)
        self.ui.listWidget_p1.addItems(res1)
        self.ui.listWidget_p2.addItems(res2)
        # change color of the same substring in plainTextEdit_w0
        for i in res1:
            text_w0=text_w0.replace(i, redText+i+endText)
        for i in res2:
            text_w0=text_w0.replace(i, bluText+i+endText)
        # self.ui.plainTextEdit_w0.setPlainText(text_w0)
        self.ui.plainTextEdit_w0.setText(text_w0)
        # self.ui.plainTextEdit_w0.repaint()
        self.ui.plainTextEdit_w0.update()
    def clean_p1(self):
        self.ui.plainTextEdit_p1.clear()
        self.ui.listWidget_p1.clear()
        pass
    def clean_p2(self):
        self.ui.plainTextEdit_p2.clear()
        self.ui.listWidget_p2.clear()
        pass
    def clean_w0(self):
        self.ui.plainTextEdit_w0.clear()
        pass
    def clean_all(self):
        self.clean_p1()
        self.clean_p2()
        self.clean_w0()
        pass


if __name__ == "__main__":
    e = Example()
    sys.exit(e.app.exec())